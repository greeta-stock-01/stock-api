server:
  shutdown: graceful
  forward-headers-strategy: framework
  tomcat:
    connection-timeout: 2s
    keep-alive-timeout: 15s
    threads:
      max: 50
      min-spare: 5

spring:
  application:
    name: author-book
  lifecycle:
    timeout-per-shutdown-phase: 15s

  jpa:
    hibernate:
      ddl-auto: update
    database-platform: org.hibernate.dialect.MySQLDialect
  datasource:
    url: jdbc:mysql://${MYSQL_HOST:localhost}:${MYSQL_PORT:3306}/authorbookdb?characterEncoding=UTF-8&serverTimezone=UTC
    username: authorbookuser
    password: authorbookpass
  graphql:
    graphiql:
      enabled: true
    cors:
      allowed-origins: ${app.cors.allowed-origins}
  cloud:
    openfeign:
      circuitbreaker:
        enabled: true
      client:
        config:
          default:
            loggerLevel: BASIC
  keycloak:
    server-url: http://localhost:8080
    server-external-url: http://localhost:8080
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${spring.keycloak.server-external-url}/realms/book-realm
          jwk-set-uri: ${spring.keycloak.server-url}/realms/book-realm/protocol/openid-connect/certs

logging:
  pattern:
    level: "%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]"
    console: "%d{yyyy-MM-dd HH:mm:ss} ${LOG_LEVEL_PATTERN:-%5p} %m%n"
  level:
    org.springframework.cloud.kubernetes: TRACE
    org.springframework.security: DEBUG
    org.hibernate:
      SQL: DEBUG
      type.descriptor.sql.BasicBinder: TRACE
    net.greeta.authorbook.client.BookReviewApiClient: DEBUG

info:
  system: Author Book Service

jwt:
  auth:
    converter:
      resource-id: book-app
      principal-attribute: preferred_username

management:
  endpoints:
    web:
      exposure:
        include: bindings, configprops, env, flyway, functions, health, heapdump, info, loggers, mappings, prometheus
  endpoint:
    health:
      show-details: always
      show-components: always
      probes:
        enabled: true
  tracing:
    sampling:
      probability: 1.0
  zipkin:
    tracing:
      endpoint: http://${ZIPKIN_HOST:localhost}:${ZIPKIN_PORT:9411}/api/v2/spans
  info:
    env:
      enabled: true
    java:
      enabled: true
    os:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name}


openapi:
  oauthflow:
    authServerUrl: ${spring.keycloak.server-external-url}
    realm: book-realm

app:
  cors:
    allowed-origins: http://localhost:3000